{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport NativeModule from \"./NativeReanimated\";\n\nvar jsListener = function jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_extends(_extends({}, evt.nativeEvent), {\n      eventName: eventName\n    }));\n  };\n};\n\nvar WorkletEventHandler = function () {\n  function WorkletEventHandler(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, WorkletEventHandler);\n\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n\n    if (!NativeModule.native) {\n      this.listeners = eventNames.reduce(function (acc, eventName) {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n\n  _createClass(WorkletEventHandler, [{\n    key: \"updateWorklet\",\n    value: function updateWorklet(newWorklet) {\n      this.worklet = newWorklet;\n      this.reattachNeeded = true;\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag) {\n      var _this = this;\n\n      var fallbackEventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      this.viewTag = viewTag;\n      this.registrations = this.eventNames.map(function (eventName) {\n        return NativeModule.registerEventHandler(viewTag + eventName, _this.worklet);\n      });\n\n      if (this.registrations.length === 0 && fallbackEventName) {\n        this.registrations.push(NativeModule.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents() {\n      this.registrations && this.registrations.forEach(function (id) {\n        return NativeModule.unregisterEventHandler(id);\n      });\n      this.registrations = undefined;\n    }\n  }]);\n\n  return WorkletEventHandler;\n}();\n\nexport { WorkletEventHandler as default };","map":null,"metadata":{},"sourceType":"module"}