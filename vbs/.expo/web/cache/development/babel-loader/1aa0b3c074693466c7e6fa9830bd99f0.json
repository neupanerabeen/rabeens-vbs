{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from \"./GenericTouchable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar TouchableHighlight = function (_Component) {\n  _inherits(TouchableHighlight, _Component);\n\n  var _super = _createSuper(TouchableHighlight);\n\n  function TouchableHighlight(props) {\n    var _this;\n\n    _classCallCheck(this, TouchableHighlight);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"showUnderlay\", function () {\n      var _this$props$onShowUnd, _this$props;\n\n      if (!_this.hasPressHandler()) {\n        return;\n      }\n\n      _this.setState({\n        extraChildStyle: {\n          opacity: _this.props.activeOpacity\n        },\n        extraUnderlayStyle: {\n          backgroundColor: _this.props.underlayColor\n        }\n      });\n\n      (_this$props$onShowUnd = (_this$props = _this.props).onShowUnderlay) === null || _this$props$onShowUnd === void 0 ? void 0 : _this$props$onShowUnd.call(_this$props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasPressHandler\", function () {\n      return _this.props.onPress || _this.props.onPressIn || _this.props.onPressOut || _this.props.onLongPress;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideUnderlay\", function () {\n      var _this$props$onHideUnd, _this$props2;\n\n      _this.setState({\n        extraChildStyle: null,\n        extraUnderlayStyle: null\n      });\n\n      (_this$props$onHideUnd = (_this$props2 = _this.props).onHideUnderlay) === null || _this$props$onHideUnd === void 0 ? void 0 : _this$props$onHideUnd.call(_this$props2);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onStateChange\", function (_from, to) {\n      if (to === TOUCHABLE_STATE.BEGAN) {\n        _this.showUnderlay();\n      } else if (to === TOUCHABLE_STATE.UNDETERMINED || to === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        _this.hideUnderlay();\n      }\n    });\n\n    _this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null\n    };\n    return _this;\n  }\n\n  _createClass(TouchableHighlight, [{\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      if (!this.props.children) {\n        return React.createElement(View, null);\n      }\n\n      var child = React.Children.only(this.props.children);\n      return React.cloneElement(child, {\n        style: StyleSheet.compose(child.props.style, this.state.extraChildStyle)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          _this$props3$style = _this$props3.style,\n          style = _this$props3$style === void 0 ? {} : _this$props3$style,\n          rest = _objectWithoutProperties(_this$props3, _excluded);\n\n      var extraUnderlayStyle = this.state.extraUnderlayStyle;\n      return React.createElement(GenericTouchable, _extends({}, rest, {\n        style: [style, extraUnderlayStyle],\n        onStateChange: this.onStateChange\n      }), this.renderChildren());\n    }\n  }]);\n\n  return TouchableHighlight;\n}(Component);\n\nexport { TouchableHighlight as default };\n\n_defineProperty(TouchableHighlight, \"defaultProps\", _objectSpread(_objectSpread({}, GenericTouchable.defaultProps), {}, {\n  activeOpacity: 0.85,\n  delayPressOut: 100,\n  underlayColor: 'black'\n}));","map":null,"metadata":{},"sourceType":"module"}