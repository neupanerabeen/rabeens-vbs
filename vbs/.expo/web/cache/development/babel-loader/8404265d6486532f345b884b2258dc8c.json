{"ast":null,"code":"import { Direction } from \"./web/constants\";\nimport FlingGestureHandler from \"./web/FlingGestureHandler\";\nimport LongPressGestureHandler from \"./web/LongPressGestureHandler\";\nimport NativeViewGestureHandler from \"./web/NativeViewGestureHandler\";\nimport * as NodeManager from \"./web/NodeManager\";\nimport PanGestureHandler from \"./web/PanGestureHandler\";\nimport PinchGestureHandler from \"./web/PinchGestureHandler\";\nimport RotationGestureHandler from \"./web/RotationGestureHandler\";\nimport TapGestureHandler from \"./web/TapGestureHandler\";\nexport var Gestures = {\n  PanGestureHandler: PanGestureHandler,\n  RotationGestureHandler: RotationGestureHandler,\n  PinchGestureHandler: PinchGestureHandler,\n  TapGestureHandler: TapGestureHandler,\n  NativeViewGestureHandler: NativeViewGestureHandler,\n  LongPressGestureHandler: LongPressGestureHandler,\n  FlingGestureHandler: FlingGestureHandler\n};\nexport default {\n  Direction: Direction,\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures)) throw new Error(\"react-native-gesture-handler: \".concat(handlerName, \" is not supported on web.\"));\n    var GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView, propsRef) {\n    NodeManager.getHandler(handlerTag).setView(newView, propsRef);\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}