{"ast":null,"code":"import AnimatedValue from \"../core/InternalAnimatedValue\";\nimport { createAnimatedSet as set } from \"../core/AnimatedSet\";\nimport { createAnimatedCall as call } from \"../core/AnimatedCall\";\nimport { createAnimatedAlways as always } from \"../core/AnimatedAlways\";\nimport { createAnimatedCond as cond } from \"../core/AnimatedCond\";\nexport function evaluateOnce(node) {\n  var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  var done = new AnimatedValue(0);\n  var evalNode = cond(done, 0, call([node, set(done, 1)], function () {\n    callback && callback();\n\n    for (var i = 0; i < input.length; i++) {\n      input[i].__removeChild(alwaysNode);\n\n      alwaysNode.__detach();\n    }\n  }));\n  var alwaysNode = always(evalNode);\n\n  for (var i = 0; i < input.length; i++) {\n    input[i].__addChild(alwaysNode);\n\n    alwaysNode.__attach();\n  }\n}","map":null,"metadata":{},"sourceType":"module"}