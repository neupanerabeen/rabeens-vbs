{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nexport default function useComponent(Component, props) {\n  var propsRef = React.useRef(props);\n  propsRef.current = props;\n  React.useEffect(function () {\n    propsRef.current = null;\n  });\n  return React.useRef(function (rest) {\n    var props = propsRef.current;\n\n    if (props === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n\n    return React.createElement(Component, _extends({}, props, rest));\n  }).current;\n}","map":null,"metadata":{},"sourceType":"module"}