{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport MutableValue from \"./MutableValue\";\n\nvar Mapper = function () {\n  function Mapper(module, mapper) {\n    var _this = this;\n\n    var inputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var outputs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, Mapper);\n\n    this.dirty = true;\n    this.id = Mapper.MAPPER_ID++;\n    this.inputs = this.extractMutablesFromArray(inputs);\n    this.outputs = this.extractMutablesFromArray(outputs);\n    this.mapper = mapper;\n\n    var markDirty = function markDirty() {\n      _this.dirty = true;\n      module.maybeRequestRender();\n    };\n\n    this.inputs.forEach(function (input) {\n      input.addListener(markDirty);\n    });\n  }\n\n  _createClass(Mapper, [{\n    key: \"execute\",\n    value: function execute() {\n      this.dirty = false;\n      this.mapper();\n    }\n  }, {\n    key: \"extractMutablesFromArray\",\n    value: function extractMutablesFromArray(array) {\n      var res = [];\n\n      function extractMutables(value) {\n        if (value instanceof MutableValue) {\n          res.push(value);\n        } else if (Array.isArray(value)) {\n          value.forEach(function (v) {\n            return extractMutables(v);\n          });\n        } else if (typeof value === 'object') {\n          Object.keys(value).forEach(function (key) {\n            extractMutables(value[key]);\n          });\n        }\n      }\n\n      extractMutables(array);\n      return res;\n    }\n  }]);\n\n  return Mapper;\n}();\n\nexport { Mapper as default };\nMapper.MAPPER_ID = 1;","map":null,"metadata":{},"sourceType":"module"}