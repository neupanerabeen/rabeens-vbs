{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"contentContainerStyle\", \"style\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport DrawerPositionContext from \"../utils/DrawerPositionContext\";\nexport default function DrawerContentScrollView(_ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n      style = _ref.style,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var drawerPosition = React.useContext(DrawerPositionContext);\n  var insets = useSafeAreaInsets();\n  var isRight = I18nManager.isRTL ? drawerPosition === 'left' : drawerPosition === 'right';\n  return React.createElement(ScrollView, _extends({}, rest, {\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingStart: !isRight ? insets.left : 0,\n      paddingEnd: isRight ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":null,"metadata":{},"sourceType":"module"}