{"ast":null,"code":"import { cond, sub, pow, divide, multiply, add, block, set, lessThan, proc, abs } from \"../base\";\nvar VELOCITY_EPS = 5;\n\nfunction decay(clock, state, config) {\n  var lastTime = cond(state.time, state.time, clock);\n  var deltaTime = sub(clock, lastTime);\n  var kv = pow(config.deceleration, deltaTime);\n  var kx = divide(multiply(config.deceleration, sub(1, kv)), sub(1, config.deceleration));\n  var v0 = divide(state.velocity, 1000);\n  var v = multiply(v0, kv, 1000);\n  var x = add(state.position, multiply(v0, kx));\n  return block([set(state.position, x), set(state.velocity, v), set(state.time, clock), cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1))]);\n}\n\nvar procDecay = proc(function (clock, time, velocity, position, finished, deceleration) {\n  return decay(clock, {\n    time: time,\n    velocity: velocity,\n    position: position,\n    finished: finished\n  }, {\n    deceleration: deceleration\n  });\n});\nexport default function decayAnimation(clock, _ref, _ref2) {\n  var time = _ref.time,\n      velocity = _ref.velocity,\n      position = _ref.position,\n      finished = _ref.finished;\n  var deceleration = _ref2.deceleration;\n  return procDecay(clock, time, velocity, position, finished, deceleration);\n}","map":null,"metadata":{},"sourceType":"module"}